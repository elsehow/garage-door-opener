//
// garage door opener
// elsehow    github.com/elsehow
// MIT license // 2015
//
// exposes two functions:
//
//   sender(seed, start_i)
//     .check(code)
//
//     s = sender(my_seed, 43)
//     s.next()
//     > 5326294
//
//   receiver(seed, start_i)
//     .next()
//
//     r = receiver(my_seed, 43)
//     r.check(5326294)
//     > False
//

var _           = require('lodash')
  , Randojs     = require('random-js')

// returns a list of size n filled with random numbers generated by prng
var list_of_codes = function (prng, num) {
  return _.map(_.range(num), prng)
}

// returns a list of 
var pnrg_from_seed = function (s, start_i) {
  var mt = Randojs.engines.mt19937()
  mt.seed(s)
  mt.discard(1024+start_i)
  return mt
}

module.exports = {

  // s = sender(my_seed, 43)
  // s.next()
  // > 5326294
  sender: function (seed, next_code_i) {
    var next_i = next_code_i
    var prng = pnrg_from_seed(seed, next_i)
    var nextCode = function() {
      var code = prng() 
      next_i = next_i+1
      return code
    }
    return {
      next: nextCode
    }
  }

  // r = receiver(my_seed, 43)
  // r.check(5326294)
  // > False
  , receiver: function(seed, next_code_i) {
    var next_i = next_code_i
    var prng = pnrg_from_seed(seed, next_i)
    var next_256 = list_of_codes(prng, 256)
    // runs when code at index i is good
    var codeIsGood = function (i) {
      next_i = i+1
      return true
    }
    var checkCode = function(c) {
      var i = _.indexOf(next_256, c)
      if (i > -1) {
        // next_256 = subset of 256 not yet explored; add 256-slice.length to the end.
        remaining_codes = _.slice(next_256, i+1)
        next_256 = remaining_codes.concat(list_of_codes(prng, 256-remaining_codes.length))
        return codeIsGood(i+next_i)
      }
      return false
    }
    return {
      check: checkCode
    }
  }
}

